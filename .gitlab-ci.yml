default:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:3.7-buster

stages:
  - generate_config
  - triggers
  - cleanup
  - bootstrap
  - deploy_ceph
  - deploy_openstack
  - setup
  - test

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
#cache:
#  paths:
#    - .cache/pip
#    - venv/

.base_setup:
  tags:
    - docker-runner
  variables:
    EXCEC_SCRIPT: test.sh

before_script:
  # Setup and add SSH_PRIVATE_KEY to ssh agent
  - 'which ssh-agent || ( apt-get update -qqy && apt-get install openssh-client -qqy )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  #
  #- python -V  # Print out python version for debugging
  #- pip install virtualenv
  #- virtualenv venv
  #- source venv/bin/activate

.generate-config:
  stage: generate_config
  script:
    - chmod +x generate_configs.sh
    - ./generate_configs.sh "$NODES_PUBLIC_IP"
    - git status
  artifacts:
    paths:
      - jobs-config.yml

.trigger-jobs:
  stage: triggers
  trigger:
    include:
      - artifact: jobs-config.yml
        job: generate-config
    strategy: depend

cleanup:
  stage: cleanup
  extends:
    - .base_setup
  script:
    # Prepare a clean environment - cleanup servers to be used for deploy
    # Ensure there is no ceph and openstack deployment on the servers
    # Restart the nodes to complete the cleanup
    # Verify that the servers are up and online.
    - pwd
    - ls
  rules:
    - if: '$MAAS_REFRESH_SERVERS' == "false"'
