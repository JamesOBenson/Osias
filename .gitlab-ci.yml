default:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:3.5-buster

stages:
  - .pre
  - bootstrap
  - deploy_ceph
  - deploy_openstack
  - test
  - cleanup

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

pre_cleanup:
  stage: .pre
  tags:
    - docker
  script:
    # Prepare a clean environment - cleanup servers to be used for deploy
    # Ensure there is no ceph and openstack deployment on the servers
    - uname -a
    - python -V

bootstrap:
  stage: bootstrap
  tags:
    - docker
  script:
    # Run bootstrap across the servers for installing the pre-reqs for CEPH and openstack
    - python -V

deploy:ceph:
  stage: deploy_ceph
  tags:
    - docker
  script:
    # Deploy ceph on target servers using cephadm
    - python -V

deploy:openstack:
  stage: deploy_openstack
  tags:
    - docker
  script:
    # Deploy openstack on target servers using kolla
    # 1. Configure kolla options for ceph
    # 2. Run Kolla pre-setup
    # 3. Run Kolla deploy
    - python -V

test:
  stage: test
  tags:
    - docker
  script:
    # Run refstack tests to ensure that the openstack deploy on target servers is functional
    - python -V
    
.run:
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

.test:
  script:
    - python setup.py test
    - pip install tox flake8  # you can also use tox
    - tox -e py36,flake8

.pages:
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - master
